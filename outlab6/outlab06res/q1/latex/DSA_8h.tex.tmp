\hypertarget{DSA_8h}{}\doxysection{D\+S\+A.\+h File Reference}
\label{DSA_8h}\index{DSA.h@{DSA.h}}


This file contains 4 different types of data structures.  


{\ttfamily \#include $<$bits/stdc++.\+h$>$}\newline
Include dependency graph for D\+S\+A.\+h\+:
% FIG 0
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
class \mbox{\hyperlink{classSinglyLinkedListNode}{Singly\+Linked\+List\+Node}}
\begin{DoxyCompactList}\small\item\em Node in a singly linked list. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}
\begin{DoxyCompactList}\small\item\em Class for a Singly Linked List. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classDoublyLinkedListNode}{Doubly\+Linked\+List\+Node}}
\begin{DoxyCompactList}\small\item\em Node in a Doubly Linked List. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classDoublyLinkedList}{Doubly\+Linked\+List}}
\begin{DoxyCompactList}\small\item\em Class for a Doubly Linked List. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classBSTNode}{B\+S\+T\+Node}}
\begin{DoxyCompactList}\small\item\em Node in a Binary Search tree. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classBinarySearchTree}{Binary\+Search\+Tree}}
\begin{DoxyCompactList}\small\item\em Class for a Binary Search Tree. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classTrie}{Trie}}
\begin{DoxyCompactList}\small\item\em Class for a suffix trie. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classHeap}{Heap}}
\begin{DoxyCompactList}\small\item\em Class for a binary heap. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{DSA_8h_ae1d1ec9482079231e898236e2b23c9ba}\label{DSA_8h_ae1d1ec9482079231e898236e2b23c9ba}} 
\#define {\bfseries ll}~long long int
\item 
\mbox{\Hypertarget{DSA_8h_a9a6d93cda3e4d178aabe221b341f8590}\label{DSA_8h_a9a6d93cda3e4d178aabe221b341f8590}} 
\#define {\bfseries vi}~vector$<$int$>$
\item 
\mbox{\Hypertarget{DSA_8h_a3fae215f58aac1c42f0223648760c4cb}\label{DSA_8h_a3fae215f58aac1c42f0223648760c4cb}} 
\#define {\bfseries vll}~vector$<$ll$>$
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
ostream \& \mbox{\hyperlink{DSA_8h_a9461d2de3283e4aee1e984527d9a7f46}{operator$<$$<$}} (ostream \&out, const \mbox{\hyperlink{classSinglyLinkedListNode}{Singly\+Linked\+List\+Node}} \&node)
\begin{DoxyCompactList}\small\item\em This is a function which operates on Singly\+Linked\+Lists. \end{DoxyCompactList}\item 
\mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}} \mbox{\hyperlink{DSA_8h_a0bddd8794faaa2a7d14108d47b820cf7}{merge}} (\mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}} list1, \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}} list2)
\begin{DoxyCompactList}\small\item\em This is a function which operates on Singly\+Linked\+Lists to merge two lists together. \end{DoxyCompactList}\item 
ostream \& \mbox{\hyperlink{DSA_8h_aa8b01464337373b11bb3dc0b9c0bf3ef}{operator$<$$<$}} (ostream \&out, const \mbox{\hyperlink{classDoublyLinkedListNode}{Doubly\+Linked\+List\+Node}} \&node)
\begin{DoxyCompactList}\small\item\em This is a function which operates on Doubly\+Linked\+Lists. \end{DoxyCompactList}\item 
ostream \& \mbox{\hyperlink{DSA_8h_aa36f567e16101108b0f20820869cc9e1}{operator$<$$<$}} (ostream \&out, const \mbox{\hyperlink{classBSTNode}{B\+S\+T\+Node}} \&node)
\begin{DoxyCompactList}\small\item\em This is a function which operates on B\+S\+Ts. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
This file contains 4 different types of data structures. 

This file contains 4 different types of data structures. Namely Singly Linked lists, Doubly Linkd Lists, Binary search trees and Suffix tries. It contains their constructors and few of their member functions. Also some overloaded operators are also given. \begin{DoxyAuthor}{Author}
Shubham Hazra 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
21 September 2022 
\end{DoxyDate}
\begin{DoxyVersion}{Version}
1.\+0 
\end{DoxyVersion}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{DSA_8h_a0bddd8794faaa2a7d14108d47b820cf7}\label{DSA_8h_a0bddd8794faaa2a7d14108d47b820cf7}} 
\index{DSA.h@{DSA.h}!merge@{merge}}
\index{merge@{merge}!DSA.h@{DSA.h}}
\doxysubsubsection{\texorpdfstring{merge()}{merge()}}
{\footnotesize\ttfamily \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}} merge (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}}]{list1,  }\item[{\mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}}]{list2 }\end{DoxyParamCaption})}



This is a function which operates on Singly\+Linked\+Lists to merge two lists together. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}} & list1 \\
\hline
\mbox{\texttt{ in}}  & {\em \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}} & list2 \\
\hline
\mbox{\texttt{ out}}  & {\em \mbox{\hyperlink{classSinglyLinkedList}{Singly\+Linked\+List}}} & merged \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The merged list 
\end{DoxyReturn}
\mbox{\Hypertarget{DSA_8h_aa36f567e16101108b0f20820869cc9e1}\label{DSA_8h_aa36f567e16101108b0f20820869cc9e1}} 
\index{DSA.h@{DSA.h}!operator$<$$<$@{operator$<$$<$}}
\index{operator$<$$<$@{operator$<$$<$}!DSA.h@{DSA.h}}
\doxysubsubsection{\texorpdfstring{operator$<$$<$()}{operator<<()}\hspace{0.1cm}{\footnotesize\ttfamily [1/3]}}
{\footnotesize\ttfamily ostream\& operator$<$$<$ (\begin{DoxyParamCaption}\item[{ostream \&}]{out,  }\item[{const \mbox{\hyperlink{classBSTNode}{B\+S\+T\+Node}} \&}]{node }\end{DoxyParamCaption})}



This is a function which operates on B\+S\+Ts. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em ostream} & \&out \\
\hline
\mbox{\texttt{ in}}  & {\em const} & \mbox{\hyperlink{classBSTNode}{B\+S\+T\+Node}} \&node \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
ostream object with the node info 
\end{DoxyReturn}
\mbox{\Hypertarget{DSA_8h_aa8b01464337373b11bb3dc0b9c0bf3ef}\label{DSA_8h_aa8b01464337373b11bb3dc0b9c0bf3ef}} 
\index{DSA.h@{DSA.h}!operator$<$$<$@{operator$<$$<$}}
\index{operator$<$$<$@{operator$<$$<$}!DSA.h@{DSA.h}}
\doxysubsubsection{\texorpdfstring{operator$<$$<$()}{operator<<()}\hspace{0.1cm}{\footnotesize\ttfamily [2/3]}}
{\footnotesize\ttfamily ostream\& operator$<$$<$ (\begin{DoxyParamCaption}\item[{ostream \&}]{out,  }\item[{const \mbox{\hyperlink{classDoublyLinkedListNode}{Doubly\+Linked\+List\+Node}} \&}]{node }\end{DoxyParamCaption})}



This is a function which operates on Doubly\+Linked\+Lists. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em ostream} & \&out \\
\hline
\mbox{\texttt{ in}}  & {\em const} & \mbox{\hyperlink{classDoublyLinkedListNode}{Doubly\+Linked\+List\+Node}} \&node \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
ostream object with the node data 
\end{DoxyReturn}
\mbox{\Hypertarget{DSA_8h_a9461d2de3283e4aee1e984527d9a7f46}\label{DSA_8h_a9461d2de3283e4aee1e984527d9a7f46}} 
\index{DSA.h@{DSA.h}!operator$<$$<$@{operator$<$$<$}}
\index{operator$<$$<$@{operator$<$$<$}!DSA.h@{DSA.h}}
\doxysubsubsection{\texorpdfstring{operator$<$$<$()}{operator<<()}\hspace{0.1cm}{\footnotesize\ttfamily [3/3]}}
{\footnotesize\ttfamily ostream\& operator$<$$<$ (\begin{DoxyParamCaption}\item[{ostream \&}]{out,  }\item[{const \mbox{\hyperlink{classSinglyLinkedListNode}{Singly\+Linked\+List\+Node}} \&}]{node }\end{DoxyParamCaption})}



This is a function which operates on Singly\+Linked\+Lists. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em ostream} & \&out \\
\hline
\mbox{\texttt{ in}}  & {\em const} & \mbox{\hyperlink{classSinglyLinkedListNode}{Singly\+Linked\+List\+Node}} \&node \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
ostream object with the node info 
\end{DoxyReturn}
